version: "3.8"
services:

  # ---------------------- USERS ------------------------ #
  # Users & Orgs DB
  pgsql_userservice:
    image: postgres:9.6-alpine
    restart: always
    environment:
      POSTGRES_DB: userservice
      POSTGRES_USER: userservice
      POSTGRES_PASSWORD: userservice

    ports:
      - "5552:5432"
    volumes:
      - userservice_database:/var/lib/postgresql/data

  # Users & Orgs Service
  api_userservice:
    depends_on:
      - pgsql_userservice
    command:
      [
        "bash",
        "./wait-for-it.sh",
        "pgsql_userservice:5432",
        "--",
        "bash",
        "start.sh",
      ]
    restart: always
    build:
      context: ./user-service
      dockerfile: Dockerfile
    environment:
      LENOMIR_DB_HOST: pgsql_userservice
      LENOMIR_DB_PORT: 5432
    ports:
      - "3001:3000"

  # ---------------------- TOURNAMENTS ------------------------ #
  # docker-compose up pgsql_tournamentservice api_tournamentservice
  # Tournaments DB
  pgsql_tournamentservice:
    image: postgres:9.6-alpine
    restart: always
    environment:
      POSTGRES_DB: tournamentservice
      POSTGRES_USER: tournamentservice
      POSTGRES_PASSWORD: tournamentservice

    ports:
      - "5462:5432"
    volumes:
      - tournamentservice_database:/var/lib/postgresql/data

  # Tournaments Service
  api_tournamentservice:
    depends_on:
      - pgsql_tournamentservice
    command:
      [
        "bash",
        "./wait-for-it.sh",
        "pgsql_tournamentservice:5462",
        "--",
        "bash",
        "start.sh",
      ]
    restart: always
    build:
      context: ./tournament-service
      dockerfile: Dockerfile
    ports:
      - "3005:3000"

  # ---------------------- RESERVATIONS ------------------------ #
  # Reservations DB
  pgsql_reservationservice:
    image: postgres:9.6-alpine
    restart: always
    environment:
      POSTGRES_DB: reservationservice
      POSTGRES_USER: reservationservice
      POSTGRES_PASSWORD: reservationservice
    ports:
      - "5433:5432"
    volumes:
      - reservationservice_database:/var/lib/postgresql/data

  # Reservations Service
  api_reservationservice:
    depends_on:
      - pgsql_userservice
    command:
      [
        "bash",
        "./wait-for-it.sh",
        "pgsql_reservationservice:5432",
        "--",
        "bash",
        "start.sh",
      ]
    restart: always
    build:
      context: ./reservation-service
      dockerfile: Dockerfile
    environment:
      LENOMIR_DB_HOST: pgsql_reservationservice
      LENOMIR_DB_PORT: 5432
    ports:
      - "3002:3000"

volumes:
  userservice_database:
  tournamentservice_database:
  reservationservice_database:
