---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
  schemas:
    sample_schema:
      type: object
      properties:
        success:
          type: boolean
        newId:
          type: integer
paths:
  "/groups/{id}/match":
    get:
      summary: Get a match between 2 players
      tags:
      - Groups
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: player1
        in: query
        schema:
          type: integer
      - name: player2
        in: query
        schema:
          type: integer
      - name: should_create
        in: query
        default: false
        schema:
          type: boolean
      responses:
        '200':
          description: Find Match
          content: {}
    put:
      summary: Create a set for a match
      tags:
      - Groups
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: player1
        in: query
        schema:
          type: integer
      - name: player1_score
        in: query
        schema:
          type: integer
      - name: player2
        in: query
        schema:
          type: integer
      - name: player2_score
        in: query
        schema:
          type: integer
      responses:
        '201':
          description: Created Set
          content: {}
  "/tournaments":
    post:
      summary: Creates New Tournament
      tags:
      - Tournaments
      parameters: []
      responses:
        '201':
          description: Tournament Created
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                org_id:
                  type: integer
              required:
              - user_id
    get:
      summary: Index Tournaments
      tags:
      - Tournaments
      responses:
        '200':
          description: Get all tournaments
          content: {}
  "/tournaments/{id}":
    delete:
      summary: Delete Tournament
      tags:
      - Tournaments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Tournament Deleted
          content: {}
    get:
      summary: Retrieve a single tournament
      tags:
      - Tournaments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Get one tournament by id
          content: {}
  "/tournaments/{id}/players":
    post:
      summary: Adds a player to the tournament
      tags:
      - Tournaments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '201':
          description: Add player
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                players:
                  type: array
                  items:
                    properties:
                      player_id:
                        type: integer
                      name:
                        type: string
                      rating:
                        type: integer
                    required:
                    - user_id
                    - name
                    - rating
    delete:
      summary: Remove Players
      tags:
      - Tournaments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Remove player
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                player_ids:
                  type: array
                  items:
                    type: integer
  "/tournaments/{id}/groups":
    post:
      summary: Create Groups for the tournament using registered users
      tags:
      - Tournaments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '201':
          description: Create Group
          content: {}
  "/tournaments/{id}/playoffs":
    post:
      summary: Create Playoffs for the tournament from the existing groups
      tags:
      - Tournaments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '201':
          description: Create Playoffs
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                player_ids:
                  type: array
                  items:
                    type: integer
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3002
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3002
